+	字符串连接	
>>>a + b
'HelloPython'
*	重复输出字符串	
>>>a * 2
'HelloHello'
[]	通过索引获取字符串中字符	
>>>a[1]
'e'
[ : ]	截取字符串中的一部分	
>>>a[1:4]
'ell'
in	成员运算符 - 如果字符串中包含给定的字符返回 True	
>>>"H" in a
True
not in	成员运算符 - 如果字符串中不包含给定的字符返回 True	
>>>"M" not in a
True
find
作用：在一个较长字符串中查找子串。返回子串所在位置的最左端索引，如果没有找到则返回-1.如果指定 beg（开始） 和 end（结束） 范围，则检查是否包含在指定范围内，如果包含子字符串返回开始的索引值，否则返回-1。
用法：string.find()
实例：
a = '   i am a boy with no money   '
print a.find('a')
输出结果：
5
print a.find('a',10,len(a))
输出结果：-1
join
作用：Python中有join()和os.path.join()两个函数，具体作用如下：
1） join()： 连接字符串数组。将字符串、元组、列表中的元素以指定的字符(分隔符)连接生成一个新的字符串
2）os.path.join()： 将多个路径组合后返回
用法：
‘sep’.join(seq)
sep：分隔符。可以为空
seq：要连接的元素序列、字符串、元组、字典
上面的语法即：以sep作为分隔符，将seq所有的元素合并成一个新的字符串
返回值：返回一个以分隔符sep连接各个元素后生成的字符串

实例：
seq = ['1','2','3','4','5']
sep = '+'
print sep.join(seq)
输出：1+2+3+4+5

dirs = '','usr','bin','env'
print '/'.join(dirs)
输出：/usr/bin/env

print os.path.join('/hello/','good/boy/','doiido')
输出：/hello/good/boy/doiido
replace
作用：Python replace() 方法把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。
语法：str.replace(old, new[, max])
参数：
old – 将被替换的子字符串。
new – 新字符串，用于替换old子字符串。
max – 可选字符串, 替换不超过 max 次

实例：
str = "this is string example....wow!!! this is really string";
print str.replace("is", "was");
print str.replace("is", "was", 3);
输出：
thwas was string example....wow!!! thwas was really string
thwas was string example....wow!!! thwas is really string
split函数
描述
Python split()通过指定分隔符对字符串进行切片，如果参数num 有指定值，则仅分隔 num 个子字符串
语法
split()方法语法：
str.split(str=”“, num=string.count(str)).
参数
str – 分隔符，默认为所有的空字符，包括空格、换行(\n)、制表符(\t)等。
num – 分割次数。
返回值
返回分割后的字符串列表。
实例
以下实例展示了split()函数的使用方法：
实例：
str = "Line1-abcdef \nLine2-abc \nLine4-abcd";
print str.split( );
print str.split(' ', 1 );
以上实例输出结果如下：
['Line1-abcdef', 'Line2-abc', 'Line4-abcd']
['Line1-abcdef', '\nLine2-abc \nLine4-abcd']
